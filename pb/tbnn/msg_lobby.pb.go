// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: msg_lobby.proto

package tbnn

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import io "io"
import github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type LobbyCode int32

const (
	LobbyCode_reserve          LobbyCode = 0
	LobbyCode_success          LobbyCode = 1
	LobbyCode_fail             LobbyCode = 2
	LobbyCode_chips_not_enough LobbyCode = 3
	LobbyCode_chips_up_limit   LobbyCode = 4
	LobbyCode_already_in_queue LobbyCode = 5
)

var LobbyCode_name = map[int32]string{
	0: "reserve",
	1: "success",
	2: "fail",
	3: "chips_not_enough",
	4: "chips_up_limit",
	5: "already_in_queue",
}
var LobbyCode_value = map[string]int32{
	"reserve":          0,
	"success":          1,
	"fail":             2,
	"chips_not_enough": 3,
	"chips_up_limit":   4,
	"already_in_queue": 5,
}

func (x LobbyCode) Enum() *LobbyCode {
	p := new(LobbyCode)
	*p = x
	return p
}
func (x LobbyCode) String() string {
	return proto.EnumName(LobbyCode_name, int32(x))
}
func (x *LobbyCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LobbyCode_value, data, "LobbyCode")
	if err != nil {
		return err
	}
	*x = LobbyCode(value)
	return nil
}
func (LobbyCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_msg_lobby_7a2379599be1f2f1, []int{0}
}

type RoomInfo struct {
	RoomType  uint32 `protobuf:"varint,1,req,name=room_type,json=roomType" json:"room_type"`
	Ante      uint32 `protobuf:"varint,2,req,name=ante" json:"ante"`
	Lowest    uint64 `protobuf:"varint,3,req,name=lowest" json:"lowest"`
	MemberNum uint32 `protobuf:"varint,4,opt,name=member_num,json=memberNum" json:"member_num"`
	Limit     uint64 `protobuf:"varint,5,opt,name=limit" json:"limit"`
}

func (m *RoomInfo) Reset()         { *m = RoomInfo{} }
func (m *RoomInfo) String() string { return proto.CompactTextString(m) }
func (*RoomInfo) ProtoMessage()    {}
func (*RoomInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_msg_lobby_7a2379599be1f2f1, []int{0}
}
func (m *RoomInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoomInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoomInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RoomInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomInfo.Merge(dst, src)
}
func (m *RoomInfo) XXX_Size() int {
	return m.Size()
}
func (m *RoomInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RoomInfo proto.InternalMessageInfo

func (m *RoomInfo) GetRoomType() uint32 {
	if m != nil {
		return m.RoomType
	}
	return 0
}

func (m *RoomInfo) GetAnte() uint32 {
	if m != nil {
		return m.Ante
	}
	return 0
}

func (m *RoomInfo) GetLowest() uint64 {
	if m != nil {
		return m.Lowest
	}
	return 0
}

func (m *RoomInfo) GetMemberNum() uint32 {
	if m != nil {
		return m.MemberNum
	}
	return 0
}

func (m *RoomInfo) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// 推送房间信息
type RoomInfoPush struct {
	RoomList []*RoomInfo `protobuf:"bytes,1,rep,name=room_list,json=roomList" json:"room_list,omitempty"`
}

func (m *RoomInfoPush) Reset()         { *m = RoomInfoPush{} }
func (m *RoomInfoPush) String() string { return proto.CompactTextString(m) }
func (*RoomInfoPush) ProtoMessage()    {}
func (*RoomInfoPush) Descriptor() ([]byte, []int) {
	return fileDescriptor_msg_lobby_7a2379599be1f2f1, []int{1}
}
func (m *RoomInfoPush) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoomInfoPush) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoomInfoPush.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RoomInfoPush) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomInfoPush.Merge(dst, src)
}
func (m *RoomInfoPush) XXX_Size() int {
	return m.Size()
}
func (m *RoomInfoPush) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomInfoPush.DiscardUnknown(m)
}

var xxx_messageInfo_RoomInfoPush proto.InternalMessageInfo

func (m *RoomInfoPush) GetRoomList() []*RoomInfo {
	if m != nil {
		return m.RoomList
	}
	return nil
}

// 开始匹配房间 请求
type StartMatchReq struct {
	Type uint32 `protobuf:"varint,1,req,name=type" json:"type"`
}

func (m *StartMatchReq) Reset()         { *m = StartMatchReq{} }
func (m *StartMatchReq) String() string { return proto.CompactTextString(m) }
func (*StartMatchReq) ProtoMessage()    {}
func (*StartMatchReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_msg_lobby_7a2379599be1f2f1, []int{2}
}
func (m *StartMatchReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StartMatchReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StartMatchReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *StartMatchReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartMatchReq.Merge(dst, src)
}
func (m *StartMatchReq) XXX_Size() int {
	return m.Size()
}
func (m *StartMatchReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StartMatchReq.DiscardUnknown(m)
}

var xxx_messageInfo_StartMatchReq proto.InternalMessageInfo

func (m *StartMatchReq) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

// 开始匹配房间 返回
type StartMatchResp struct {
	Code LobbyCode `protobuf:"varint,1,req,name=code,enum=tbnn.LobbyCode" json:"code"`
	Type uint32    `protobuf:"varint,2,opt,name=type" json:"type"`
}

func (m *StartMatchResp) Reset()         { *m = StartMatchResp{} }
func (m *StartMatchResp) String() string { return proto.CompactTextString(m) }
func (*StartMatchResp) ProtoMessage()    {}
func (*StartMatchResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_msg_lobby_7a2379599be1f2f1, []int{3}
}
func (m *StartMatchResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StartMatchResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StartMatchResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *StartMatchResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartMatchResp.Merge(dst, src)
}
func (m *StartMatchResp) XXX_Size() int {
	return m.Size()
}
func (m *StartMatchResp) XXX_DiscardUnknown() {
	xxx_messageInfo_StartMatchResp.DiscardUnknown(m)
}

var xxx_messageInfo_StartMatchResp proto.InternalMessageInfo

func (m *StartMatchResp) GetCode() LobbyCode {
	if m != nil {
		return m.Code
	}
	return LobbyCode_reserve
}

func (m *StartMatchResp) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

// 取消匹配房间 请求
type CancelMatchReq struct {
}

func (m *CancelMatchReq) Reset()         { *m = CancelMatchReq{} }
func (m *CancelMatchReq) String() string { return proto.CompactTextString(m) }
func (*CancelMatchReq) ProtoMessage()    {}
func (*CancelMatchReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_msg_lobby_7a2379599be1f2f1, []int{4}
}
func (m *CancelMatchReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CancelMatchReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CancelMatchReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *CancelMatchReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelMatchReq.Merge(dst, src)
}
func (m *CancelMatchReq) XXX_Size() int {
	return m.Size()
}
func (m *CancelMatchReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelMatchReq.DiscardUnknown(m)
}

var xxx_messageInfo_CancelMatchReq proto.InternalMessageInfo

// 取消匹配房间 返回
type CancelMatchResp struct {
	Code LobbyCode `protobuf:"varint,1,req,name=code,enum=tbnn.LobbyCode" json:"code"`
}

func (m *CancelMatchResp) Reset()         { *m = CancelMatchResp{} }
func (m *CancelMatchResp) String() string { return proto.CompactTextString(m) }
func (*CancelMatchResp) ProtoMessage()    {}
func (*CancelMatchResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_msg_lobby_7a2379599be1f2f1, []int{5}
}
func (m *CancelMatchResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CancelMatchResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CancelMatchResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *CancelMatchResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelMatchResp.Merge(dst, src)
}
func (m *CancelMatchResp) XXX_Size() int {
	return m.Size()
}
func (m *CancelMatchResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelMatchResp.DiscardUnknown(m)
}

var xxx_messageInfo_CancelMatchResp proto.InternalMessageInfo

func (m *CancelMatchResp) GetCode() LobbyCode {
	if m != nil {
		return m.Code
	}
	return LobbyCode_reserve
}

// 离开房间房间 请求
type LeaveRoomReq struct {
}

func (m *LeaveRoomReq) Reset()         { *m = LeaveRoomReq{} }
func (m *LeaveRoomReq) String() string { return proto.CompactTextString(m) }
func (*LeaveRoomReq) ProtoMessage()    {}
func (*LeaveRoomReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_msg_lobby_7a2379599be1f2f1, []int{6}
}
func (m *LeaveRoomReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LeaveRoomReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LeaveRoomReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *LeaveRoomReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaveRoomReq.Merge(dst, src)
}
func (m *LeaveRoomReq) XXX_Size() int {
	return m.Size()
}
func (m *LeaveRoomReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaveRoomReq.DiscardUnknown(m)
}

var xxx_messageInfo_LeaveRoomReq proto.InternalMessageInfo

// 离开房间房间 返回
type LeaveRoomResp struct {
	Code LobbyCode `protobuf:"varint,1,req,name=code,enum=tbnn.LobbyCode" json:"code"`
}

func (m *LeaveRoomResp) Reset()         { *m = LeaveRoomResp{} }
func (m *LeaveRoomResp) String() string { return proto.CompactTextString(m) }
func (*LeaveRoomResp) ProtoMessage()    {}
func (*LeaveRoomResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_msg_lobby_7a2379599be1f2f1, []int{7}
}
func (m *LeaveRoomResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LeaveRoomResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LeaveRoomResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *LeaveRoomResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaveRoomResp.Merge(dst, src)
}
func (m *LeaveRoomResp) XXX_Size() int {
	return m.Size()
}
func (m *LeaveRoomResp) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaveRoomResp.DiscardUnknown(m)
}

var xxx_messageInfo_LeaveRoomResp proto.InternalMessageInfo

func (m *LeaveRoomResp) GetCode() LobbyCode {
	if m != nil {
		return m.Code
	}
	return LobbyCode_reserve
}

func init() {
	proto.RegisterType((*RoomInfo)(nil), "tbnn.RoomInfo")
	proto.RegisterType((*RoomInfoPush)(nil), "tbnn.RoomInfoPush")
	proto.RegisterType((*StartMatchReq)(nil), "tbnn.StartMatchReq")
	proto.RegisterType((*StartMatchResp)(nil), "tbnn.StartMatchResp")
	proto.RegisterType((*CancelMatchReq)(nil), "tbnn.CancelMatchReq")
	proto.RegisterType((*CancelMatchResp)(nil), "tbnn.CancelMatchResp")
	proto.RegisterType((*LeaveRoomReq)(nil), "tbnn.LeaveRoomReq")
	proto.RegisterType((*LeaveRoomResp)(nil), "tbnn.LeaveRoomResp")
	proto.RegisterEnum("tbnn.LobbyCode", LobbyCode_name, LobbyCode_value)
}
func (m *RoomInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoomInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintMsgLobby(dAtA, i, uint64(m.RoomType))
	dAtA[i] = 0x10
	i++
	i = encodeVarintMsgLobby(dAtA, i, uint64(m.Ante))
	dAtA[i] = 0x18
	i++
	i = encodeVarintMsgLobby(dAtA, i, uint64(m.Lowest))
	dAtA[i] = 0x20
	i++
	i = encodeVarintMsgLobby(dAtA, i, uint64(m.MemberNum))
	dAtA[i] = 0x28
	i++
	i = encodeVarintMsgLobby(dAtA, i, uint64(m.Limit))
	return i, nil
}

func (m *RoomInfoPush) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoomInfoPush) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.RoomList) > 0 {
		for _, msg := range m.RoomList {
			dAtA[i] = 0xa
			i++
			i = encodeVarintMsgLobby(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *StartMatchReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StartMatchReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintMsgLobby(dAtA, i, uint64(m.Type))
	return i, nil
}

func (m *StartMatchResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StartMatchResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintMsgLobby(dAtA, i, uint64(m.Code))
	dAtA[i] = 0x10
	i++
	i = encodeVarintMsgLobby(dAtA, i, uint64(m.Type))
	return i, nil
}

func (m *CancelMatchReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CancelMatchReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	return i, nil
}

func (m *CancelMatchResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CancelMatchResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintMsgLobby(dAtA, i, uint64(m.Code))
	return i, nil
}

func (m *LeaveRoomReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LeaveRoomReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	return i, nil
}

func (m *LeaveRoomResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LeaveRoomResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintMsgLobby(dAtA, i, uint64(m.Code))
	return i, nil
}

func encodeVarintMsgLobby(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *RoomInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovMsgLobby(uint64(m.RoomType))
	n += 1 + sovMsgLobby(uint64(m.Ante))
	n += 1 + sovMsgLobby(uint64(m.Lowest))
	n += 1 + sovMsgLobby(uint64(m.MemberNum))
	n += 1 + sovMsgLobby(uint64(m.Limit))
	return n
}

func (m *RoomInfoPush) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.RoomList) > 0 {
		for _, e := range m.RoomList {
			l = e.Size()
			n += 1 + l + sovMsgLobby(uint64(l))
		}
	}
	return n
}

func (m *StartMatchReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovMsgLobby(uint64(m.Type))
	return n
}

func (m *StartMatchResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovMsgLobby(uint64(m.Code))
	n += 1 + sovMsgLobby(uint64(m.Type))
	return n
}

func (m *CancelMatchReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *CancelMatchResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovMsgLobby(uint64(m.Code))
	return n
}

func (m *LeaveRoomReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *LeaveRoomResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovMsgLobby(uint64(m.Code))
	return n
}

func sovMsgLobby(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozMsgLobby(x uint64) (n int) {
	return sovMsgLobby(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *RoomInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgLobby
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RoomInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RoomInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomType", wireType)
			}
			m.RoomType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgLobby
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RoomType |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ante", wireType)
			}
			m.Ante = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgLobby
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Ante |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lowest", wireType)
			}
			m.Lowest = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgLobby
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Lowest |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MemberNum", wireType)
			}
			m.MemberNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgLobby
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MemberNum |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgLobby
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgLobby(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgLobby
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("room_type")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("ante")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("lowest")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoomInfoPush) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgLobby
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RoomInfoPush: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RoomInfoPush: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgLobby
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgLobby
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoomList = append(m.RoomList, &RoomInfo{})
			if err := m.RoomList[len(m.RoomList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgLobby(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgLobby
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StartMatchReq) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgLobby
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StartMatchReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StartMatchReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgLobby
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipMsgLobby(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgLobby
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("type")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StartMatchResp) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgLobby
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StartMatchResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StartMatchResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgLobby
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= (LobbyCode(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgLobby
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgLobby(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgLobby
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("code")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CancelMatchReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgLobby
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CancelMatchReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CancelMatchReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgLobby(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgLobby
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CancelMatchResp) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgLobby
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CancelMatchResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CancelMatchResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgLobby
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= (LobbyCode(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipMsgLobby(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgLobby
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("code")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LeaveRoomReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgLobby
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LeaveRoomReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LeaveRoomReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgLobby(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgLobby
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LeaveRoomResp) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgLobby
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LeaveRoomResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LeaveRoomResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgLobby
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= (LobbyCode(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipMsgLobby(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgLobby
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("code")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMsgLobby(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMsgLobby
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsgLobby
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsgLobby
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthMsgLobby
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowMsgLobby
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipMsgLobby(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthMsgLobby = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMsgLobby   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("msg_lobby.proto", fileDescriptor_msg_lobby_7a2379599be1f2f1) }

var fileDescriptor_msg_lobby_7a2379599be1f2f1 = []byte{
	// 409 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0x41, 0x6f, 0xd3, 0x30,
	0x18, 0x86, 0xe3, 0x34, 0x85, 0xee, 0xdb, 0x9a, 0x59, 0x16, 0x07, 0x0b, 0xa1, 0x10, 0xc2, 0xa5,
	0x0c, 0xa9, 0x87, 0x5d, 0x27, 0x2e, 0xe3, 0x84, 0x34, 0x10, 0x2a, 0x88, 0xab, 0xe5, 0x66, 0xdf,
	0xd6, 0x48, 0xb1, 0x9d, 0xc5, 0xf6, 0x50, 0xff, 0x05, 0xbf, 0x82, 0xdf, 0xb2, 0xe3, 0x8e, 0x9c,
	0x10, 0x6a, 0xff, 0x08, 0x72, 0xd3, 0x96, 0xa0, 0x9d, 0x76, 0x8b, 0x9f, 0xef, 0xf5, 0xfb, 0xbd,
	0x6f, 0x0c, 0xc7, 0xca, 0x5e, 0x8b, 0xda, 0xcc, 0xe7, 0xcb, 0x69, 0xd3, 0x1a, 0x67, 0x58, 0xe2,
	0xe6, 0x5a, 0x17, 0x3f, 0x09, 0x8c, 0x66, 0xc6, 0xa8, 0x0f, 0xfa, 0xca, 0xb0, 0x57, 0x70, 0xd0,
	0x1a, 0xa3, 0x84, 0x5b, 0x36, 0xc8, 0x49, 0x1e, 0x4f, 0xc6, 0xe7, 0xc9, 0xdd, 0xef, 0x97, 0xd1,
	0x6c, 0x14, 0xf0, 0xd7, 0x65, 0x83, 0x8c, 0x43, 0x22, 0xb5, 0x43, 0x1e, 0xf7, 0xa6, 0x1b, 0xc2,
	0x5e, 0xc0, 0x93, 0xda, 0x7c, 0x47, 0xeb, 0xf8, 0x20, 0x8f, 0x27, 0xc9, 0x76, 0xb6, 0x65, 0xec,
	0x35, 0x80, 0x42, 0x35, 0xc7, 0x56, 0x68, 0xaf, 0x78, 0x92, 0x93, 0xfd, 0xed, 0x83, 0x8e, 0x7f,
	0xf2, 0x8a, 0x3d, 0x87, 0x61, 0x5d, 0xa9, 0xca, 0xf1, 0x61, 0x4e, 0xf6, 0x0e, 0x1d, 0x2a, 0xce,
	0xe0, 0x68, 0x97, 0xf3, 0xb3, 0xb7, 0x0b, 0xf6, 0x76, 0x9b, 0xb5, 0xae, 0xac, 0xe3, 0x24, 0x1f,
	0x4c, 0x0e, 0x4f, 0xd3, 0x69, 0xa8, 0x34, 0xdd, 0xc9, 0xba, 0xd4, 0x17, 0x95, 0x75, 0xc5, 0x1b,
	0x18, 0x7f, 0x71, 0xb2, 0x75, 0x1f, 0xa5, 0x2b, 0x17, 0x33, 0xbc, 0x09, 0x35, 0x1e, 0x94, 0xdc,
	0x90, 0xe2, 0x1b, 0xa4, 0x7d, 0xa9, 0x6d, 0xd8, 0x09, 0x24, 0xa5, 0xb9, 0xec, 0xb4, 0xe9, 0x29,
	0xed, 0x96, 0x6c, 0xfe, 0xa4, 0x08, 0x7c, 0x77, 0x3b, 0x7c, 0xef, 0x7d, 0xe3, 0x5e, 0xc1, 0xce,
	0x97, 0x42, 0xfa, 0x5e, 0xea, 0x12, 0xeb, 0x5d, 0x86, 0xe2, 0x1d, 0x1c, 0xff, 0x47, 0x1e, 0xb7,
	0xaa, 0x48, 0xe1, 0xe8, 0x02, 0xe5, 0x2d, 0x86, 0xba, 0xc1, 0xee, 0x0c, 0xc6, 0xbd, 0xf3, 0xe3,
	0xcc, 0x4e, 0x1a, 0x80, 0x7f, 0x13, 0x76, 0x08, 0x4f, 0x5b, 0xb4, 0xd8, 0xde, 0x22, 0x8d, 0xc2,
	0xc1, 0xfa, 0xb2, 0x44, 0x6b, 0x29, 0x61, 0x23, 0x48, 0xae, 0x64, 0x55, 0xd3, 0x98, 0x3d, 0x03,
	0x5a, 0x2e, 0xaa, 0xc6, 0x0a, 0x6d, 0x9c, 0x40, 0x6d, 0xfc, 0xf5, 0x82, 0x0e, 0x18, 0x83, 0xb4,
	0xa3, 0xbe, 0x11, 0x9b, 0x77, 0xa3, 0x49, 0x50, 0xca, 0xba, 0x45, 0x79, 0xb9, 0x14, 0x95, 0x16,
	0x37, 0x1e, 0x3d, 0xd2, 0xe1, 0x39, 0xbf, 0x5b, 0x65, 0xe4, 0x7e, 0x95, 0x91, 0x3f, 0xab, 0x8c,
	0xfc, 0x58, 0x67, 0xd1, 0xfd, 0x3a, 0x8b, 0x7e, 0xad, 0xb3, 0xe8, 0x6f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x05, 0xaa, 0x74, 0x76, 0xaa, 0x02, 0x00, 0x00,
}
